# Kahani Docker Compose Configuration
# First user to register becomes admin automatically
# No default users - register your first account to get started

version: '3.8'

services:
  backend:
    build: ./backend
    container_name: kahani-backend
    ports:
      - "9876:9876"
    volumes:
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
    # Run as root initially to fix permissions, then switch to 1000:1000
    # user: "1000:1000"  # Temporarily disabled to allow permission fixing
    environment:
      - DATABASE_URL=sqlite:///./data/kahani.db
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-jwt-key}
      - LLM_BASE_URL=${LLM_BASE_URL:-http://host.docker.internal:1234/v1}
      - LLM_API_KEY=${LLM_API_KEY:-not-needed}
      - LLM_MODEL=${LLM_MODEL:-local-model}
      - CORS_ORIGINS=*
      - DOCKER_CONTAINER=true
      - KAHANI_ENV=development
      - KAHANI_API_URL=http://localhost:9876
      - KAHANI_FRONTEND_URL=http://localhost:6789
      - PORT=9876
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - kahani-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9876/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    
  frontend:
    build: ./frontend
    container_name: kahani-frontend
    ports:
      - "6789:6789"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:9876
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:9876
      - PORT=6789
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - kahani-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6789/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  kahani-network:
    driver: bridge
