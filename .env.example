# Kahani Environment Configuration
# Copy this file to .env and update with your actual values
# NEVER commit .env to git!

# =============================================================================
# SECURITY - REQUIRED (No defaults provided for security)
# =============================================================================

# Generate strong secrets using:
#   python3 -c "import secrets; print(secrets.token_urlsafe(32))"
# Or see docs/SECURITY_SETUP.md for detailed instructions

SECRET_KEY=CHANGE_ME_generate_random_secret_here
JWT_SECRET_KEY=CHANGE_ME_generate_random_jwt_secret_here

# =============================================================================
# DATABASE - REQUIRED
# =============================================================================

# SQLite (default, good for homelab)
DATABASE_URL=sqlite:///./data/kahani.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql://user:password@localhost:5432/kahani

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# CORS Origins - CRITICAL SECURITY SETTING
# Set to your actual domain/IP where users access the app
# Examples:
#   - Reverse proxy: ["https://kahani.yourdomain.com"]
#   - Local IP: ["http://192.168.1.100", "http://192.168.1.100:6789"]
#   - mDNS: ["http://kahani.local"]
#   - Multiple: ["https://kahani.com", "http://192.168.1.100"]
# WARNING: Never use "*" in production!
CORS_ORIGINS=["http://localhost:6789"]

# Application Ports (usually no need to change)
PORT=9876
FRONTEND_PORT=6789

# =============================================================================
# LLM CONFIGURATION
# =============================================================================

# LLM API Settings (adjust for your LLM provider)
LLM_BASE_URL=http://localhost:1234/v1
LLM_API_KEY=not-needed-for-local
LLM_MODEL=local-model
LLM_MAX_TOKENS=2048
LLM_TEMPERATURE=0.7

# =============================================================================
# FEATURES & PERMISSIONS
# =============================================================================

# Allow user registration (disable after creating accounts if desired)
ENABLE_REGISTRATION=true

# Enable story sharing features
ENABLE_STORY_SHARING=true

# Allow public stories (not implemented yet)
ENABLE_PUBLIC_STORIES=false

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Debug mode (MUST be false in production!)
DEBUG=false

# JWT Token Expiration
# Homelab: 120 minutes is reasonable
# Production: Consider 30 minutes for higher security
ACCESS_TOKEN_EXPIRE_MINUTES=120

# Remember me token expiration (days)
REFRESH_TOKEN_EXPIRE_DAYS=30

# =============================================================================
# SEMANTIC MEMORY (AI Features)
# =============================================================================

# Enable semantic search and memory features
ENABLE_SEMANTIC_MEMORY=true

# Path to ChromaDB storage
SEMANTIC_DB_PATH=./data/chromadb

# Embedding model for semantic search
SEMANTIC_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# Number of similar scenes to retrieve
SEMANTIC_SEARCH_TOP_K=5

# =============================================================================
# CONTEXT MANAGEMENT
# =============================================================================

# Maximum tokens to send to LLM
CONTEXT_MAX_TOKENS=4000

# Number of recent scenes to always keep
CONTEXT_KEEP_RECENT_SCENES=3

# Summarize when story has more than this many scenes
CONTEXT_SUMMARY_THRESHOLD=5

# Context assembly strategy: "linear" or "hybrid"
CONTEXT_STRATEGY=hybrid

# =============================================================================
# FILE STORAGE
# =============================================================================

# Data directory for database and files
DATA_DIR=./data

# Export directory for story exports
EXPORT_DIR=./exports

# Maximum story file size (MB)
MAX_STORY_SIZE_MB=10

# =============================================================================
# LOGGING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path
LOG_FILE=./logs/kahani.log

# =============================================================================
# DOCKER-SPECIFIC (Only needed for Docker deployments)
# =============================================================================

# Docker container indicator (auto-set by docker-compose)
# DOCKER_CONTAINER=true

# Container environment (auto-detected)
# KAHANI_ENV=production

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# 
# Quick Start:
# 1. Copy this file: cp .env.example .env
# 2. Generate secrets: See docs/SECURITY_SETUP.md
# 3. Set CORS_ORIGINS to your domain/IP
# 4. Set DEBUG=false for production
# 5. Configure LLM settings for your provider
# 
# Documentation:
# - Security Setup: docs/SECURITY_SETUP.md
# - Security Checklist: docs/SECURITY_CHECKLIST.md
# - Production Deployment: PRODUCTION_DEPLOYMENT.md
# - Reverse Proxy: docs/REVERSE_PROXY_GUIDE.md
#
# =============================================================================
